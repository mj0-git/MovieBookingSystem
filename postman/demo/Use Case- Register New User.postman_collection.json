{
	"info": {
		"_postman_id": "20f9bd56-ba69-4533-9f82-9e4f97bde1b5",
		"name": "Use Case: Register New User",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22902243"
	},
	"item": [
		{
			"name": "register_new_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", ()=> {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\",()=>{\r",
							"    pm.response.to.have.header('Location');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\",()=>{\r",
							"    pm.response.to.have.header('Location');\r",
							"    pm.response.to.be.header(\r",
							"        \"Location\", \"/users/3\"\r",
							"    );    \r",
							"});\r",
							"\r",
							"postman.setEnvironmentVariable(\"user_path\",pm.response.headers.get('Location'))\r",
							"\r",
							"pm.test(\"Test Response time max limit\", ()=>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userName\":\"lsantic\",\r\n    \"email\":\"lsantic@jh.edu\",\r\n    \"password\":\"password\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "login_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Test Response time max limit\", ()=>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200)\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\",()=>{\r",
							"    pm.response.to.have.header('Content-Type');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is text/plain\",()=>{\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('text/plain;charset=UTF-8');\r",
							"});\r",
							"\r",
							"postman.setEnvironmentVariable(\"user_access\",pm.response.text())\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userName\":\"lsantic\",\r\n    \"password\":\"password\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "all_users_json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\",()=>{\r",
							"    pm.response.to.have.header('Content-Type');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\",()=>{\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							"const jsonData=pm.response.json();\r",
							"pm.test(\"Test data type of the response\", ()=>{\r",
							"pm.expect(jsonData).to.be.an(\"array\");});\r",
							"\r",
							"pm.test(\"Test Response time max limit\", ()=>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_put_xml",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\",()=>{\r",
							"    pm.response.to.have.header('Content-Type');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/xml\",()=>{\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/xml');\r",
							"});\r",
							"\r",
							"pm.test(\"Test Response time max limit\", ()=>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200)\r",
							"});\r",
							"\r",
							"const xmlData=xml2Json(pm.response.text());\r",
							"pm.test(\"Test Username of the response\", ()=>{\r",
							"pm.expect(xmlData.Account.userName).to.eql('lsantic');});\r",
							"pm.test(\"Test Email of the response\", ()=>{\r",
							"pm.expect(xmlData.Account.email).to.eql('lsantic@jh.edu');});\r",
							"pm.test(\"Test First Name of the response\", ()=>{\r",
							"pm.expect(xmlData.Account.firstName).to.eql('Lauren');});\r",
							"pm.test(\"Test Last Name of the response\", ()=>{\r",
							"pm.expect(xmlData.Account.lastName).to.eql('Santichen');});\r",
							"pm.test(\"Test address of the response\", ()=>{\r",
							"pm.expect(xmlData.Account.address).to.eql('123 Sesame Str. NY');});\r",
							"pm.test(\"Test phone number of the response\", ()=>{\r",
							"pm.expect(xmlData.Account.phoneNumber).to.eql('(123) 456-7890');});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/xml",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Account>\r\n    <userName>lsantic</userName>\r\n    <email>lsantic@jh.edu</email>\r\n    <firstName>Lauren</firstName>\r\n    <lastName>Santichen</lastName>\r\n    <address>123 Sesame Str. NY</address>\r\n    <phoneNumber>(123) 456-7890</phoneNumber>\r\n</Account>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{user_path}}",
					"host": [
						"{{url}}{{user_path}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_after_registration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\",()=>{\r",
							"    pm.response.to.have.header('Content-Type');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\",()=>{\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							"pm.test(\"Test Response time max limit\", ()=>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200)\r",
							"});\r",
							"\r",
							"const jsonData=pm.response.json();\r",
							"pm.test(\"Test id of the response\", ()=>{\r",
							"pm.expect(jsonData.userId).to.eql(3);});\r",
							"pm.test(\"Test userName of the response\", ()=>{\r",
							"pm.expect(jsonData.userName).to.eql('lsantic');});\r",
							"pm.test(\"Test Email of the response\", ()=>{\r",
							"pm.expect(jsonData.email).to.eql('lsantic@jh.edu');});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{user_path}}",
					"host": [
						"{{url}}{{user_path}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "movie_with-title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\",()=>{",
							"    pm.response.to.have.header('Content-Type');",
							"});",
							"",
							"pm.test(\"Content-Type header is application/json\",()=>{",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});",
							"const jsonData=pm.response.json();",
							"",
							"postman.setEnvironmentVariable(\"favorite_id\",jsonData.imdbID);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/theater/movie?title=Violent Night",
					"host": [
						"{{url}}"
					],
					"path": [
						"theater",
						"movie"
					],
					"query": [
						{
							"key": "title",
							"value": "Violent Night"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "favorites_put_json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\",()=>{\r",
							"    pm.response.to.have.header('Content-Type');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\",()=>{\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							"pm.test(\"Test Response time max limit\", ()=>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/xml",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userName\":\"lsantic\",\r\n    \"email\":\"lsantic@jh.edu\",\r\n    \"firstName\":\"Lauren\",\r\n    \"lastName\":\"Santichen\",\r\n    \"address\":\"123 Sesame Str. NY\",\r\n    \"phoneNumber\":\"(123) 456-7890\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{user_path}}/favorites/{{favorite_id}}",
					"host": [
						"{{url}}{{user_path}}"
					],
					"path": [
						"favorites",
						"{{favorite_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_favorites_json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\",()=>{\r",
							"    pm.response.to.have.header('Content-Type');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\",()=>{\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							"const jsonData=pm.response.json();\r",
							"pm.test(\"Test data type of the response\", ()=>{\r",
							"pm.expect(jsonData).to.be.an(\"array\");});\r",
							"\r",
							"pm.test(\"Test Response time max limit\", ()=>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{user_path}}/favorites",
					"host": [
						"{{url}}{{user_path}}"
					],
					"path": [
						"favorites"
					]
				}
			},
			"response": []
		},
		{
			"name": "favorites_del_json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\",()=>{\r",
							"    pm.response.to.have.header('Content-Type');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\",()=>{\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							"pm.test(\"Test Response time max limit\", ()=>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/xml",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userName\":\"lsantic\",\r\n    \"email\":\"lsantic@jh.edu\",\r\n    \"firstName\":\"Lauren\",\r\n    \"lastName\":\"Santichen\",\r\n    \"address\":\"123 Sesame Str. NY\",\r\n    \"phoneNumber\":\"(123) 456-7890\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{user_path}}/favorites/{{favorite_id}}",
					"host": [
						"{{url}}{{user_path}}"
					],
					"path": [
						"favorites",
						"{{favorite_id}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{user_access}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}